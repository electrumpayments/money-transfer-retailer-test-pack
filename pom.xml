<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>io.electrum</groupId>
  <artifactId>money-transfer-retailer-test-pack</artifactId>
  <version>0.0.1-RC1</version>
  <packaging>jar</packaging>
  <name>Money Transfer Retailer</name>
  <description>Server and Postman scripts to test Money Transfer Retailer Interface implementaitons</description>
  <url>https://electrumpayments.github.io/money-transfer-retailer-test-pack</url>
  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <developers>
    <developer>
      <name>Electrum Payments</name>
      <email>hello@electrum.io</email>
      <organization>Electrum Payments</organization>
      <organizationUrl>http://electrum.io</organizationUrl>
    </developer>
  </developers>
  <scm>
    <connection>scm:git:git@github.com:electrumpayments/money-transfer-retailer-test-pack.git</connection>
    <developerConnection>scm:git:git@github.com:electrumpayments/money-transfer-retailer-test-pack.git</developerConnection>
    <url>git@github.com:electrumpayments/money-transfer-retailer-test-pack.git</url>
  </scm>

  <properties>
    <money-transfer-retailer-version>0.0.1-SNAPSHOT</money-transfer-retailer-version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <joda-time-version>2.9.9</joda-time-version>
    <swagger-version>1.5.16</swagger-version>
    <jetty-version>9.4.7.v20170914</jetty-version>
    <jersey-version>2.26</jersey-version>
    <hibernate-validator-version>5.4.2.Final</hibernate-validator-version>
    <el-version>2.2.5</el-version>
    <swagger-maven-plugin-version>3.1.3</swagger-maven-plugin-version>
    <slf4j-version>1.7.25</slf4j-version>
    <logback-version>1.2.3</logback-version>
    <maven-resources-plugin-version>2.7</maven-resources-plugin-version>
    <maven-compiler-plugin-version>3.7.0</maven-compiler-plugin-version>
    <maven-source-plugin-version>3.0.1</maven-source-plugin-version>
    <maven-javadoc-plugin-version>2.10.4</maven-javadoc-plugin-version>
    <jackson-version>2.9.0</jackson-version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-joda</artifactId>
      <version>${jackson-version}</version>
    </dependency>
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>${joda-time-version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>${jetty-version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-common</artifactId>
      <version>${jersey-version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-json-jackson</artifactId>
      <version>${jersey-version}</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <version>${hibernate-validator-version}</version>
    </dependency>
    <dependency>
      <groupId>javax.el</groupId>
      <artifactId>javax.el-api</artifactId>
      <version>${el-version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.web</groupId>
      <artifactId>javax.el</artifactId>
      <version>${el-version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j-version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-webapp</artifactId>
      <version>${jetty-version}</version>
    </dependency>
    <!-- dependency> <groupId>org.glassfish.jersey.containers</groupId> <artifactId>jersey-container-jetty-servlet</artifactId> 
      <version>${jersey-version}</version> </dependency -->
    <!-- -->
    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-servlet</artifactId>
      <version>${jersey-version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-client</artifactId>
      <version>${jersey-version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-server</artifactId>
      <version>${jersey-version}</version>
    </dependency>
    <dependency>
      <groupId>io.electrum</groupId>
      <artifactId>money-transfer-retailer-interface</artifactId>
      <version>${money-transfer-retailer-version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback-version}</version>
    </dependency>
    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-jersey2-jaxrs</artifactId>
      <version>${swagger-version}</version>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
      <resource>
        <directory>src/dist</directory>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>src/docs/devguide</directory>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven-resources-plugin-version}</version>
        <executions>
          <execution>
            <id>copy-resource-docker</id>
            <phase>install</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/target/classes</directory>
                  <includes>
                    <include>Dockerfile</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-resource-heroku</id>
            <phase>install</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/target/classes</directory>
                  <includes>
                    <include>heroku_run.sh</include>
                    <include>Procfile</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>jar-with-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <archive>
                <manifest>
                  <mainClass>io.electrum.moneytransfer.server.MoneyTransferTestServerRunner</mainClass>
                </manifest>
              </archive>
              <descriptorRefs>
                <descriptorRef>jar-with-dependencies</descriptorRef>
              </descriptorRefs>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin-version}</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven-source-plugin-version}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven-javadoc-plugin-version}</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>install</phase>
            <configuration>
              <tasks if="newman.test">
                <exec executable="${basedir}/test/postman/run_tests.sh" failonerror="true">
                  <arg value="${basedir}" />
                  <arg value="${basedir}/test/postman" />
                </exec>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
